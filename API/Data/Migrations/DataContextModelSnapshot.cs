// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("API.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ancestry")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("string");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("HouseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("string");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("string");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("string");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("API.Entities.Founder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ancestry")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("string");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("HouseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("string");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("string");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("string");

                    b.HasKey("Id");

                    b.HasIndex("HouseId")
                        .IsUnique();

                    b.ToTable("Founders");
                });

            modelBuilder.Entity("API.Entities.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FounderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("string");

                    b.Property<string>("Motto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("string");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("string");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("string");

                    b.HasKey("Id");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("API.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("DateOnly");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("string");

                    b.Property<int>("HouseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("string");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("string");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("string");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Entities.Character", b =>
                {
                    b.HasOne("API.Entities.House", "House")
                        .WithMany("NotableCharacters")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("House");
                });

            modelBuilder.Entity("API.Entities.Founder", b =>
                {
                    b.HasOne("API.Entities.House", "House")
                        .WithOne("Founder")
                        .HasForeignKey("API.Entities.Founder", "HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("House");
                });

            modelBuilder.Entity("API.Entities.User", b =>
                {
                    b.HasOne("API.Entities.House", "House")
                        .WithMany("Users")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("House");
                });

            modelBuilder.Entity("API.Entities.House", b =>
                {
                    b.Navigation("Founder");

                    b.Navigation("NotableCharacters");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
